version: '3.8'
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2
    container_name: elasticsearch
    networks:
      - integration-test
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - sales-database:/usr/share/elasticsearch/data
    healthcheck:
      test: "curl -f elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=25s || exit 1"
      interval: 1s
      timeout: 1s
      retries: 10

  zookeeper:
    image: bitnami/zookeeper
    container_name: zookeeper
    networks:
      - integration-test
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 1s
      timeout: 1s
      retries: 30

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    networks:
      - integration-test
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper

  sales:
    container_name: sales
    restart: on-failure
    build:
      context: sales
      dockerfile: Dockerfile
    environment:
      ACTIVE_PROFILE: "integration-test"
    ports:
      - "8082:8082"
    depends_on:
      - elasticsearch
      - kafka
    networks:
      - integration-test
    healthcheck:
      test: "curl -f http://sales:8082/actuator/health"
      interval: 1s
      timeout: 1s
      retries: 30

  integration-tests:
    container_name: integration-test
    build:
      context: integration-test
      dockerfile: Dockerfile
    environment:
      SALES_HOST: "sales"
    depends_on:
      - sales
    networks:
      - integration-test

volumes:
  zookeeper_data:
    driver: local
  sales-database:
    driver: local
  kafka_data:
    driver: local

networks:
  integration-test:
    driver: bridge